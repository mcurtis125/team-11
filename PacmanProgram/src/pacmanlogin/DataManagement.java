package pacmanlogin;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;

/**
* This method can update player's score, max reached level
* @author xchen82
* @author ChanWoo
* 
*/

public class DataManagement {
	
	/**
	* This method can update player's max reached level,
	* if the user's current max level is lower than the input int MaxLevel,
	* it will update the user's max level
        * 
        * @param FilePath This is the name of .txt file where profile informations are saved
        * @param MaxLevel This parameter is the current level which is read from the level class
        * @param username This parameter is the currently logged in user's username
	*/
	public static void AddNewMaxLevel(String username, int MaxLevel, String FilePath){
    	ArrayList<GetLoginInfo> UserList=GetUserInfo.getuserinfo(FilePath);
    	
    	for (int i=0;i<UserList.size();i++){
 
            if (UserList.get(i).GetUserName().equals(username)) {
            	if(UserList.get(i).GetMaxLevel()<MaxLevel){
            	UserList.get(i).AddNewMaxLevel(MaxLevel);}
            }
            
        }
    	FileManagement.UpdateFile(UserList,FilePath);
    }
    
	/**
	* This method can update player's max 10 scores,
	* it will compare the new score with the current 10 leading scores, 
        * and place it in the right place(if needed)
        * 
        * @param FilePath name of the .txt file where profile informations are saved
        * @param username Currently logged in user's username
        * @param NewScore score which is generated by current user after the game
	*/
    public static void AddNewScore(String username, int NewScore,String FilePath){
    	
    	ArrayList<GetLoginInfo> UserList=GetUserInfo.getuserinfo(FilePath);
    	
        for (int i=0;i<UserList.size();i++){
        	
            if (UserList.get(i).GetUserName().equals(username)) {
            	UserList.get(i).AddNewScore(NewScore);
            }
            
        }    	
    	
        FileManagement.UpdateFile(UserList,FilePath);
    }
    
    /**
     * This will return the Top10 score in the form of class TopScores(Player,TopScore)
     * 
     * @param FilePath name of the .txt file where profile informations are saved
     * @return return the array of 10 highest scores among the entire profiles
     */
    public static ArrayList<TopScores> GetTop10Score(String FilePath)
    {
    	ArrayList<GetLoginInfo> UserList=GetUserInfo.getuserinfo(FilePath);
    	ArrayList<TopScores> AllScores= new ArrayList<TopScores>();
    	
    	for (int i=0;i<UserList.size();i++){
    		for (int a=0;a<10;a++){
                    TopScores tempTopScore = new TopScores(UserList.get(i).GetDisplayName(),UserList.get(i).GetScore(a));
                    AllScores.add(10*i+a,tempTopScore);
    		}
    	}
    	
    	Collections.sort(AllScores);
    	
    	return AllScores;
    }
}
